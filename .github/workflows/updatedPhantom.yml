      - name: Run PhantomBuster and Upload to S3
        env:
          SECRET: ${{ secrets.SECRET }}
          BUCKET_NAME: 'phantombusterdata'
        run: |
          node <<'EOF'
          const axios = require('axios');
          const fs = require('fs');
          const AWS = require('aws-sdk');

          // parse the JSON blob from one single secret
          const { apiKey, agentId, accessKeyId, secretAccessKey } = JSON.parse(process.env.SECRET);
          const bucketName = process.env.BUCKET_NAME;

          async function run() {
            const launchRes = await axios.post(
              'https://api.phantombuster.com/api/v2/agents/launch',
              { id: agentId },
              { headers: { 'X-Phantombuster-Key-1': apiKey } }
            );

            const containerId = launchRes.data.containerId;
            console.log("üöÄ Launched agent with container ID:", containerId);

            await new Promise(r => setTimeout(r, 20000)); // wait for execution

            const resultRes = await axios.get(
              `https://api.phantombuster.com/api/v2/containers/fetch-output?id=${containerId}`,
              { headers: { 'X-Phantombuster-Key-1': apiKey } }
            );

            const output = JSON.stringify(resultRes.data, null, 2);
            const filename = "phantom_output.json";
            fs.writeFileSync(filename, output);
            console.log("‚úÖ Output saved locally:", filename);

            const s3 = new AWS.S3({ accessKeyId, secretAccessKey });

            const uploadParams = {
              Bucket: bucketName,
              Key: `phantom-data/phantom_output_${Date.now()}.json`,
              Body: output,
              ContentType: "application/json"
            };

            await s3.upload(uploadParams).promise();
            console.log("‚úÖ Uploaded to S3:", uploadParams.Key);
          }

          run().catch(err => {
            console.error("‚ùå Error:", err);
            process.exit(1);
          });
          EOF
