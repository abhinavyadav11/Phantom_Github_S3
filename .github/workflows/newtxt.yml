name: Text Run PhantomBuster and Upload to S3 (Once a Day)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight UTC

jobs:
  run-phantombuster:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: |
          npm init -y
          npm install axios aws-sdk

      - name: Run PhantomBuster and Upload to S3
        env:
          SECRET: ${{ secrets.SECRET }}
          BUCKET_NAME: 'phantombusterdata'
        run: |
          node <<'EOF'
          const axios = require('axios');
          const fs = require('fs');
          const AWS = require('aws-sdk');

          const { apiKey, agentId, accessKeyId, secretAccessKey } = JSON.parse(process.env.SECRET);
          const bucketName = process.env.BUCKET_NAME;

          async function readKeywordsFromTxt() {
            const data = fs.readFileSync('keywords.txt', 'utf-8');
            return data.split('\n').map(line => line.trim()).filter(Boolean);
          }

          async function run() {
            const today = new Date();
            const yesterday = new Date(today);
            yesterday.setDate(today.getDate() - 1);

            const since = yesterday.toISOString().split('T')[0];
            const until = today.toISOString().split('T')[0];

            const keywords = await readKeywordsFromTxt();
            const keywordQueries = keywords.map(keyword => `${keyword} since:${since} until:${until}`);

            for (let keywordQuery of keywordQueries) {
              console.log(`üöÄ Launching PhantomBuster agent for keyword: ${keywordQuery}`);
              const launchRes = await axios.post(
                'https://api.phantombuster.com/api/v2/agents/launch',
                { id: agentId, argument: { keyword: keywordQuery } },
                { headers: { 'X-Phantombuster-Key-1': apiKey } }
              );
              const containerId = launchRes.data.containerId;
              console.log("üöÄ Launched agent with container ID:", containerId);

              await new Promise(r => setTimeout(r, 20000));

              const resultRes = await axios.get(
                `https://api.phantombuster.com/api/v2/containers/fetch-output?id=${containerId}`,
                { headers: { 'X-Phantombuster-Key-1': apiKey } }
              );
              const output = JSON.stringify(resultRes.data, null, 2);
              const safeFilename = keywordQuery.replace(/[^\w\d_-]+/g, '_').slice(0, 40); // sanitize for filename
              fs.writeFileSync(`phantom_output_${safeFilename}.json`, output);
              console.log(`‚úÖ Output saved locally: phantom_output_${safeFilename}.json`);

              const s3 = new AWS.S3({ accessKeyId, secretAccessKey });
              await s3.upload({
                Bucket: bucketName,
                Key: `phantom-data/phantom_output_${Date.now()}_${safeFilename}.json`,
                Body: output,
                ContentType: "application/json"
              }).promise();
              console.log("‚úÖ Uploaded to S3");
            }
          }

          run().catch(err => {
            console.error("‚ùå Error:", err);
            process.exit(1);
          });
          EOF
