name: PhantomBuster to S3 Upload

on:
  workflow_dispatch:  # manual trigger
  schedule:
    - cron: '0 9 * * *'  # runs every day at 9 AM UTC

jobs:
  run-and-upload:
    runs-on: ubuntu-latest

    env:
      PHANTOMBUSTER_API_KEY: ${{ secrets.PHANTOMBUSTER_API_KEY }}
      PHANTOM_AGENT_ID: ${{ secrets.PHANTOM_AGENT_ID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install axios aws-sdk

      - name: Run PhantomBuster Agent and Upload to S3
        run: |
          node <<'EOF'
          const axios = require('axios');
          const fs = require('fs');
          const AWS = require('aws-sdk');

          const apiKey = process.env.PHANTOMBUSTER_API_KEY;
          const agentId = process.env.PHANTOM_AGENT_ID;

          console.log("‚úÖ PHANTOMBUSTER_API_KEY present:", !!apiKey);
          console.log("‚úÖ PHANTOM_AGENT_ID present:", !!agentId);

          if (!apiKey || !agentId) {
            console.error("‚ùå Missing required secrets.");
            process.exit(1);
          }

          async function run() {
            const launchRes = await axios.post(
              'https://api.phantombuster.com/api/v2/agents/launch',
              { id: agentId },
              { headers: { 'X-Phantombuster-Key-1': apiKey } }
            );

            const containerId = launchRes.data.containerId;
            console.log("üöÄ Launched agent with container ID:", containerId);

            await new Promise(r => setTimeout(r, 20000)); // wait for execution

            const resultRes = await axios.get(
              `https://api.phantombuster.com/api/v2/containers/fetch-output?id=${containerId}`,
              { headers: { 'X-Phantombuster-Key-1': apiKey } }
            );

            const output = JSON.stringify(resultRes.data, null, 2);
            const filename = "phantom_output.json";
            fs.writeFileSync(filename, output);
            console.log("‚úÖ Output saved locally:", filename);

            // Upload to S3
            const s3 = new AWS.S3({
              accessKeyId: process.env.AWS_ACCESS_KEY_ID,
              secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY
            });

            const uploadParams = {
              Bucket: process.env.S3_BUCKET_NAME,
              Key: `phantom-data/phantom_output_${Date.now()}.json`,
              Body: output,
              ContentType: "application/json"
            };

            await s3.upload(uploadParams).promise();
            console.log("‚úÖ Uploaded to S3:", uploadParams.Key);
          }

          run().catch(err => {
            console.error("‚ùå Error:", err);
            process.exit(1);
          });
          EOF
